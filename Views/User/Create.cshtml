@model UserModel
@{
    ViewData["Title"] = "Create Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form id="registrationForm" enctype="multipart/form-data" onsubmit="submitForm(event)">
    @Html.AntiForgeryToken()
    <input type="hidden" id="Id" name="Id" value="@Model?.Id" />

    <div class="row mb-3">
        <label for="Username" class="col-sm-2 col-form-label">Username</label>
        <div class="col-sm-6">
            <input type="text" class="form-control" id="Username" name="Username" required value="@Model?.Username" autocomplete="off" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="Password" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-6">
            <input type="Password" class="form-control" id="Password" name="Password" required value="@Model?.Password" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="Address" class="col-sm-2 col-form-label">Address</label>
        <div class="col-sm-6">
            <textarea class="form-control" id="Address" rows="3" required maxlength="100">@Model?.Address</textarea>
        </div>
    </div>

    <div class="row mb-3">
        <label for="Fruits" class="col-sm-2 col-form-label">Fruits</label>
        <div class="col-sm-6">
            @Html.DropDownListFor(model => model.Fruits, new SelectList(new List<SelectListItem>
            {
            new SelectListItem { Text = "Choose fruits", Value = "" },
            new SelectListItem { Text = "Orange", Value = "Orange", Selected = Model?.Fruits == "Orange" },
            new SelectListItem { Text = "Apple", Value = "Apple", Selected = Model?.Fruits == "Apple" }
            }, "Value", "Text"), new { @class = "form-select", required = "required" })
        </div>
    </div>

    <fieldset class="row mb-3">
        <legend class="col-form-label col-sm-2 pt-0">Gender</legend>
        <div class="col-sm-10">
            <div class="form-check">
                <input type="radio" class="form-check-input" id="male" name="gender" required value="Male" @(Model?.Gender == "Male" ? "checked" : "") />
                <label class="form-check-label" for="male">Male</label>
            </div>
            <div class="form-check">
                <input type="radio" class="form-check-input" id="female" name="gender" value="Female" @(Model?.Gender == "Female" ? "checked" : "") />
                <label class="form-check-label" for="female">Female</label>
            </div>
        </div>
    </fieldset>

    <div class="row mb-3">
        <label class="col-form-label col-sm-2 pt-0">Interests</label>
        <div class="col-sm-6">
            <select class="form-control" id="InterestsString" name="InterestsString" multiple="multiple" required>
                <!-- Add dynamic options using ViewBag or ViewData -->
                @foreach (var interest in ViewBag.InterestsList ?? new List<string>())
                {
                    <option value="@interest">@interest</option>
                }
            </select>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-form-label col-sm-2 pt-0">Hobbies</label>
        <div class="col-sm-10">
            @foreach (var hobbies in new List<string> { "Sports", "Music", "Movies" })
            {
                <div class="form-check form-check-inline">
                    <input type="checkbox" class="form-check-input" id="hobbies@hobbies" name="hobbies" value="@hobbies" checked='@Model?.Hobbies?.Contains(hobbies)' />
                    <label class="form-check-label" for="hobbies@hobbies">@hobbies</label>
                </div>
            }
            <span asp-validation-for="Hobbies" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-form-label col-sm-2 pt-0" for="profileImage">Profile Image</label>
        <div class="col-sm-6">
            <input type="file" class="form-control" id="profileImage" required name="profileImage" accept="image/png, image/gif, image/jpeg" />

            @if (!string.IsNullOrEmpty(Model?.ImagePath))
            {
                <img src="/@Model.ImagePath" alt="Profile Image" width="50" height="50" />
            }
        </div>
    </div>

    <div class="row mb-3">
        <label for="SelectedStateId" class="col-sm-2 col-form-label">State</label>
        <div class="col-sm-6">
            @Html.DropDownListFor(model => model.SelectedStateId, new SelectList(Model.States, "StateId", "Name"), "Choose state", new { @class = "form-select", id = "stateDropdown",data_val="true", required = "required" })
        </div>
    </div>

    <div class="row mb-3">
        <label for="SelectedCityId" class="col-sm-2 col-form-label">City</label>
        <div class="col-sm-6">
            @Html.DropDownListFor(model => model.SelectedCityId, new SelectList(Model.Cities, "CityId", "Name"), "Choose city", new { @class = "form-select",id = "cityDropdown"  ,data_val = "true",required = "required" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-sm-4">
            <button class="btn btn-primary" type="submit">Submit</button>
        </div>
    </div>

</form>


@section scripts {
    <script>

        $(document).ready(function () {

            var interestsList = @Html.Raw(Json.Serialize(Model?.InterestsString != null ? Model.InterestsString : new List<string>()));

            if (!Array.isArray(interestsList)) {
                interestsList = interestsList.split(',').map(function (item) {
                    return item.trim();
                });
            }

            $('#InterestsString').select2({
                placeholder: 'Select Interests',
                allowClear: true,
                tags: true,
                data: interestsList.map(function (item) {
                    return { id: item, text: item };
                })
            });

            $('#InterestsString').val(interestsList).trigger('change');

            $("#stateDropdown").change(function () {
                var stateId = $(this).val();
                $.getJSON("/User/GetCitiesByStateId",
                    { stateId: stateId },
                    function (data) {
                        var items = "<option value=''>Select City</option>";
                        $.each(data, function (index, city) {
                            items += "<option value='" + city.cityId + "'>" + city.name + "</option>";
                        });
                        $("#cityDropdown").html(items);
                    });
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            var interestsArray = @Html.Raw(Json.Serialize(Model?.InterestsString != null ? Model.InterestsString : new List<string>()));
            var select = document.getElementById("InterestsString");

            for (var i = 0; i < select.options.length; i++) {
                if (interestsArray.includes(select.options[i].value)) {
                    select.options[i].selected = true;
                }
            }
        });
        var createOreditURL = '@Url.Action("Create","User")';
    </script>
    <script src="~/js/master-ajax.js" asp-append-version="true"></script>
    }
